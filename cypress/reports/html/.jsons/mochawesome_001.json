{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2024-03-19T01:47:51.947Z",
    "end": "2024-03-19T01:47:53.550Z",
    "duration": 1603,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "8ae4b6a9-4705-44b0-832b-2ad95b63ade7",
      "title": "",
      "fullFile": "cypress\\e2e\\APITesting\\PostCalls.cy.js",
      "file": "cypress\\e2e\\APITesting\\PostCalls.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "33793ffe-5720-4040-984e-276098316ab6",
          "title": "api testing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Approach1- Dynamically generating json object",
              "fullTitle": "api testing Approach1- Dynamically generating json object",
              "timedOut": null,
              "duration": 1561,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const requestBody = {\n  randomname: Math.random().toString(5).substring(2),\n  // Creating random gmail\n  job: Math.random().toString(5).substring(2) + \"@gmail.com\"\n};\ncy.request({\n  method: 'POST',\n  url: 'https://reqres.in/api/users',\n  // We have already created the body so we will simply pass it\n  body: requestBody\n})\n// to Capture the response we will use .then\n.then(response => {\n  cy.log(\"Response Body:\", response.body); // Log the response body for debugging\n  expect(response.status).to.eq(201);\n  // expect(response.body.name).to.eq(requestBody.randomname);\n  expect(response.body.job).to.eq(requestBody.job);\n});",
              "err": {},
              "uuid": "069ae0d2-27a2-49cf-9300-cc0f0c80b75d",
              "parentUUID": "33793ffe-5720-4040-984e-276098316ab6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "069ae0d2-27a2-49cf-9300-cc0f0c80b75d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1561,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "charts": true,
        "reportPageTitle": "custom-title",
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "saveAllAttempts": false,
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress\\reports\\html\\.jsons"
      },
      "version": "6.2.0"
    }
  }
}